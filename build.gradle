buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:2.5.0")

  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
  mavenCentral()
}

task genJaxb {
  ext.sourcesDir = "src/main/generated-sources/jaxb"
  ext.classesDir = "${buildDir}/classes/jaxb"
  ext.schema = "src/main/resources/kodilla.xsd"

  outputs.dir classesDir

  doLast() {
    project.ant {
      taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
              classpath: configurations.jaxb.asPath
      mkdir(dir: sourcesDir)
      mkdir(dir: classesDir)

      xjc(destdir: sourcesDir, schema: schema) {
        arg(value: "-wsdl")
        produces(dir: sourcesDir, includes: "**/*.java")
      }

      javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
            debugLevel: "lines,vars,source",
            classpath: configurations.jaxb.asPath) {
        src(path: sourcesDir)
        include(name: "**/*.java")
        include(name: "*.java")
      }

      copy(todir: classesDir) {
        fileset(dir: sourcesDir, erroronmissingdir: false) {
          exclude(name: "**/*.java")
        }
      }
    }
  }
}

configurations {
  jaxb
}

bootJar {
  baseName = 'kodilla-soap'
  version =  '1.0.0'
  from genJaxb.classesDir
}

repositories {
  mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
  implementation('javax.xml.bind:jaxb-api:2.3.0')
  implementation('javax.activation:activation:1.1')
  implementation('org.glassfish.jaxb:jaxb-runtime:2.3.0')
  implementation("org.springframework.boot:spring-boot-starter-web-services")
  testImplementation("org.springframework.boot:spring-boot-starter-test")
  implementation("wsdl4j:wsdl4j:1.6.1")
  jaxb("org.glassfish.jaxb:jaxb-xjc:2.2.11")
  implementation(files(genJaxb.classesDir).builtBy(genJaxb))
}
